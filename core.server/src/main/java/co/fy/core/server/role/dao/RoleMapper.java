package co.fy.core.server.role.dao;

import co.fy.core.server.role.model.Role;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface RoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Tue Dec 12 14:17:28 CST 2017
     */
    @Delete({
        "delete from role",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Tue Dec 12 14:17:28 CST 2017
     */
    @Insert({
        "insert into role (id, role_name, ",
        "enable)",
        "values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, ",
        "#{enable,jdbcType=VARCHAR})"
    })
    int insert(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Tue Dec 12 14:17:28 CST 2017
     */
    @InsertProvider(type=RoleSqlProvider.class, method="insertSelective")
    int insertSelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Tue Dec 12 14:17:28 CST 2017
     */
    @Select({
        "select",
        "id, role_name, enable",
        "from role",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType= JdbcType.VARCHAR, id=true),
        @Result(column="role_name", property="roleName", jdbcType= JdbcType.VARCHAR),
        @Result(column="enable", property="enable", jdbcType= JdbcType.VARCHAR)
    })
    Role selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Tue Dec 12 14:17:28 CST 2017
     */
    @UpdateProvider(type=RoleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated Tue Dec 12 14:17:28 CST 2017
     */
    @Update({
        "update role",
        "set role_name = #{roleName,jdbcType=VARCHAR},",
          "enable = #{enable,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Role record);

    @Select({
            "select",
            "COUNT(1)",
            "FROM",
            "users,",
            "role,",
            "role_authority,",
            "authority",
            "WHERE",
            "users.role_id = role.id",
            "AND role.id = role_authority.role_id",
            "AND role_authority.authority_id = authority.id",
            "AND users.username = #{userName,jdbcType=VARCHAR}",
            "AND authority.api = #{api,jdbcType=VARCHAR}"
    })
    int selectByUsernameAndPath(@Param("userName")String userName, @Param("api")String api);
    @Select({
            "select",
            "id, role_name, enable",
            "from role"
    })
    @Results({
            @Result(column="id", property="id", jdbcType= JdbcType.VARCHAR, id=true),
            @Result(column="role_name", property="roleName", jdbcType= JdbcType.VARCHAR),
            @Result(column="enable", property="enable", jdbcType= JdbcType.VARCHAR)
    })
    List<Role> selectList();
}