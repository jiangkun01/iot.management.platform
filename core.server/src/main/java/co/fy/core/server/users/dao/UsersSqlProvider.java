package co.fy.core.server.users.dao;

import co.fy.core.server.users.model.Users;

import static org.apache.ibatis.jdbc.SqlBuilder.*;

public class UsersSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Sun Dec 03 18:37:31 CST 2017
     */
    public String insertSelective(Users record) {
        BEGIN();
        INSERT_INTO("users");
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=BIGINT}");
        }
        
        if (record.getUsername() != null) {
            VALUES("username", "#{username,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            VALUES("password", "#{password,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleId() != null) {
            VALUES("role_id", "#{roleId,jdbcType=VARCHAR}");
        }
        if (record.getAddTime() != null) {
            VALUES("addtime", "#{addTime,jdbcType=VARCHAR}");
        }
        if (record.getEnabled() != null) {
            VALUES("enabled", "#{enabled,jdbcType=BIT}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Sun Dec 03 18:37:31 CST 2017
     */
    public String updateByPrimaryKeySelective(Users record) {
        BEGIN();
        UPDATE("users");
        
        if (record.getUsername() != null) {
            SET("username = #{username,jdbcType=VARCHAR}");
        }
        
        if (record.getPassword() != null) {
            SET("password = #{password,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleId() != null) {
            SET("role_id = #{roleId,jdbcType=VARCHAR}");
        }
        
        if (record.getEnabled() != null) {
            SET("enabled = #{enabled,jdbcType=BIT}");
        }
        
        WHERE("user_id = #{userId,jdbcType=BIGINT}");
        
        return SQL();
    }
}