package co.fy.core.server.organization.dao;

import co.fy.core.server.organization.model.Organization;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
@Mapper
public interface OrganizationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table organization
     *
     * @mbggenerated Mon Dec 18 17:22:06 CST 2017
     */
    @Delete({
        "delete from organization",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table organization
     *
     * @mbggenerated Mon Dec 18 17:22:06 CST 2017
     */
    @Insert({
        "insert into organization (id, name, ",
        "addtime, deletetime, ",
        "enable)",
        "values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{addtime,jdbcType=TIMESTAMP}, #{deletetime,jdbcType=TIMESTAMP}, ",
        "#{enable,jdbcType=INTEGER})"
    })
    int insert(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table organization
     *
     * @mbggenerated Mon Dec 18 17:22:06 CST 2017
     */
    @InsertProvider(type=OrganizationSqlProvider.class, method="insertSelective")
    int insertSelective(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table organization
     *
     * @mbggenerated Mon Dec 18 17:22:06 CST 2017
     */
    @Select({
        "select",
        "id, name, addtime, deletetime, enable",
        "from organization",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType= JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType= JdbcType.VARCHAR),
        @Result(column="addtime", property="addtime", jdbcType= JdbcType.TIMESTAMP),
        @Result(column="deletetime", property="deletetime", jdbcType= JdbcType.TIMESTAMP),
        @Result(column="enable", property="enable", jdbcType= JdbcType.INTEGER)
    })
    Organization selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table organization
     *
     * @mbggenerated Mon Dec 18 17:22:06 CST 2017
     */
    @UpdateProvider(type=OrganizationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table organization
     *
     * @mbggenerated Mon Dec 18 17:22:06 CST 2017
     */
    @Update({
        "update organization",
        "set name = #{name,jdbcType=VARCHAR},",
          "addtime = #{addtime,jdbcType=TIMESTAMP},",
          "deletetime = #{deletetime,jdbcType=TIMESTAMP},",
          "enable = #{enable,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Organization record);

    @Select({
            "select",
            "id, name, addtime, deletetime, enable",
            "from organization",
            "where enable=1"
    })
    @Results({
            @Result(column="id", property="id", jdbcType= JdbcType.VARCHAR, id=true),
            @Result(column="name", property="name", jdbcType= JdbcType.VARCHAR),
            @Result(column="addtime", property="addtime", jdbcType= JdbcType.TIMESTAMP),
            @Result(column="deletetime", property="deletetime", jdbcType= JdbcType.TIMESTAMP),
            @Result(column="enable", property="enable", jdbcType= JdbcType.INTEGER)
    })
    List<Organization> selectOrganizations();
}